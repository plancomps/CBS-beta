 general {
    funcon-term: 
      initialise-binding
      initialise-storing
        multithread 
          sequential(
            update-thread-schedule{thread-preemptible},
            scope({"m" |-> semaphore-create(2)},
              give(
                function closure
                  sequential(
                    semaphore-sync-else-wait bound-directly"m",
                    print int-add(given, 1),
                    print int-add(given, 2),
                    semaphore-release bound-directly"m"),
                sequential(
                  effect thread-activate thread-detached supply(given, 10),
                  effect thread-activate thread-detached supply(given, 20),
                  effect thread-activate thread-detached supply(given, 30))))               
          )
        ;
    display-mutable-entity: "store,thread-map,thread-stepping,active-thread-set,terminated-thread-map";
    refocus: false;
    non-deterministic: "value-operations";
    seed: 142;
  }

tests {
    result-term: null-value;
    standard-out: [11,21,12,22,31,32];
}
