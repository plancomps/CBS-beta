general {
    funcon-term: 
      initialise-giving
      initialise-binding
      sequential(
        check-true is-equal(match(false,pattern-type bools), map()),
        check-true is-equal(match([42],pattern-type lists(ints)), map()),
        check-true is-equal(match(abstraction none,pattern-type abstractions(values=>values)), map()),
        check-true is-equal(match(list(true),pattern-type lists(booleans)), map()),
        check-true is-equal(match(tuple(42,true),pattern-type tuples(integers,booleans)), map()),
        effect else(
          match(true,pattern-type ints),
          match([42],pattern-type lists(bools)),
          match(abstraction none,pattern-type atoms),
          match(list(true),pattern-type lists(integers)),
          match(tuple(42,true),pattern-type tuples(booleans,integers)),
          print"OK"))
        ;
}

tests {
    result-term: none;
    standard-out: ["OK"];
}
