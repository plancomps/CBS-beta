### Interacting

#### Output

[
  Entity standard-out
  Funcon print
]

Entity
  _ -- standard-out!(V*:defined-values*) -> _
/*
  This entity represents the sequence of values output by a particular
  transition, where the empty sequence `( )` represents the lack of output.
  Composition of transitions concatenates their output sequences.
*/

Funcon
  print(V*:defined-values*) : =>nothing
/*
  `print(X*)` evaluates the arguments `X*` and emits the resulting sequence of
  values on the standard-out channel. `print( )` has no effect.
*/
Rule
  print(V*:defined-values*) -- standard-out!(V*) -> none


#### Input

[
  Entity standard-in
  Funcon read
]

Entity
  _ -- standard-in?(V:defined-values*|nothing) -> _
/*
  This entity represents the sequence of values input by a particular
  transition, where the empty sequence `( )` represents that no values are
  input. The value `none` represents the end of the input.
  Composition of transitions concatenates their input sequences.
*/

Funcon
  read : =>defined-values
/*
  `read` inputs a single value from the standard-in channel, and returns it.
  If the end of the input has been reached, `read` fails.
*/

Rule
  read -- standard-in?(V:defined-values) -> V
Rule
  read -- standard-in?(none) -> fail
