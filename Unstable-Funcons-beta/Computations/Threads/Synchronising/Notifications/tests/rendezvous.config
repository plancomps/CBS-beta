 general {
    funcon-term: 
      initialise-binding
      initialise-storing
        multithread 
          sequential(
            update-thread-schedule{thread-preemptible},
            scope({"m" |-> rendezvous-create(2)},
              sequential(
                effect thread-activate thread-detached thunk closure
                  sequential(
                    rendezvous-sync-else-wait(bound"m", 27)),
                effect thread-activate thread-detached thunk closure
                  sequential(
                    rendezvous-sync-else-wait(bound"m", 27),
                    rendezvous-sync-else-wait(bound"m", "OK")),
                rendezvous-sync-else-wait(bound"m", "OK"),
                print "OK"))              
          )
        ;
    display-mutable-entity: "store,thread-map,thread-stepping,active-thread-set,terminated-thread-map";
    refocus: false;
    non-deterministic: "value-operations";
    seed: 42;
  }

tests {
    result-term: null-value;
    standard-out: ["OK"];
}
