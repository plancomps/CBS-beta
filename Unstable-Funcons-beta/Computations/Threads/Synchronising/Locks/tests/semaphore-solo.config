 general {
    funcon-term: 
      initialise-binding
      initialise-storing
        multithread 
          sequential(
            update-thread-schedule{thread-preemptible},
            give(semaphore-create(2),
              sequential(
                semaphore-sync given,
                semaphore-release given,
                semaphore-sync given,
                semaphore-sync given,
                else(semaphore-sync given, semaphore-release given),
                semaphore-release given,
                semaphore-sync-else-wait given,
                thread-spin semaphore-sync given,
                print "OK"))
          )
        ;
    display-mutable-entity: "store,thread-map,thread-stepping,active-thread-set,terminated-thread-map";
    refocus: false;
}

tests {
    result-term: null-value;
    standard-out: ["OK"];
}
